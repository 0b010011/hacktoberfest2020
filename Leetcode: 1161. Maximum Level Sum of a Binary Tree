/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
int bfs(TreeNode* root);
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        if(!root)return 0;
        return bfs(root);
    }
};

int bfs(TreeNode* root)
{
    int maxVal = INT_MIN;
    queue<TreeNode*>q;
    q.push(root);
    q.push(nullptr);
    int finalLevel = 0;
    int level = 1;
    int sum = 0;
    
    while(!q.empty())
    {
        TreeNode* node = q.front();
        q.pop();
        if (node == nullptr)
        {
            if (sum > maxVal)
            {
                finalLevel = level;
                maxVal = sum;
            }
            level++;
            sum = 0;     
            if(!q.empty())
            {
                q.push(nullptr);
            }
            else
            {
                continue;
            }
        }
        else
        { 
            sum += node->val;
            if(node->left)q.push(node->left);
            if(node->right)q.push(node->right);
        } 
    }
    return finalLevel;
}
